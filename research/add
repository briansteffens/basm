add al, ah                    00   e0                       00000000 11100000
add [rax], ah                 00   20                       00000000 00100000

add ax, bx               66   01   d8              01100110 00000001 11011000
add eax, ebx                  01   d8                       00000001 11011000
add rax, rbx             48   01   d8              01001000 00000001 11011000

add [rax], bx            66   01   18              01100110 00000001 00011000
add [rax], ebx                01   18                       00000001 00011000
add [rax], rbx           48   01   18              01001000 00000001 00011000

add ah, [rax]                 02   20                       00000010 00100000

add bx, [rax]            66   03   18              01100110 00000011 00011000
add ebx, [rax]                03   18                       00000011 00011000
add rbx, [rax]           48   03   18              01001000 00000011 00011000

add al, 3                     04        imm8                00000100          imm8

add ax, 3                66   05        imm16      01100110 00000101
add eax, 3                    05        imm32               00000101          imm32
add rax, 3               48   05        imm32      01001000 00000101          imm32

add bl, 3                     80   c3   imm8                10000000 11000011 imm8

add bx, 3                66   81   c3   imm16      01100110 10000001 11000011 imm16
add ebx, 3                    81   c3   imm32               10000001 11000011 imm32
add rbx, 3               48   81   c3   imm32      01001000 10000001 11000011 imm32

add byte [rax], 3             80   00   imm8                10000000 00000000 imm8

add word [rax], 3        66   81   00   imm16      01100110 10000001 00000000 imm16
add dword [rax], 3            81   00   imm32               10000001 00000000 imm32
add qword [rax], 3       48   81   00   imm32      01001000 10000001 00000000 imm32

add rax, [rax+7]         48   03   40   07         01001000 00000011 01000000 00000111
add rax, [rax+rbx]       48   03   04   18         01001000 00000011 00000100 00011000
add rax, [rax*2]         48   03   04   00         01001000 00000011 00000100 00000000
add rax, [rax*2+7]       48   03   44   00   07    01001000 00000011 01000100 00000000 00000111
add rax, [rax*2+rbx]     48   03   04   43         01001000 00000011 00000100 01000011
add rax, [rax*2+rbx+7]   48   03   44   43   07    01001000 00000011 01000100 01000011 00000111


00 = add byte addr to reg
     add byte reg  to reg

01 = add {,d,q}word addr to reg
     add {,d,q}word reg  to reg

02 = add byte reg  to addr

03 = add {,d,q}word reg to addr

04 = add byte reg(al) to imm8
05 = add {,d,q}word reg(ax/eax/rax/al) to imm16/32

80 = add byte addr to imm8

81 = add {,d,q}word addr to imm16/32


if word, prepend 66
if qword, prepend 48


if opcode != 04,05 -> mod rm
